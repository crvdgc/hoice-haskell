(set-logic HORN)
(declare-fun X0 (Int Int) Bool)
(declare-fun X1 (Int Int Int) Bool)
(declare-fun X2 (Int Int) Bool)
(declare-fun X3 (Int Int Int) Bool)
(declare-fun X16 (Int Int) Bool)
(declare-fun X17 (Int Int) Bool)
(declare-fun X18 (Int Int Int) Bool)
(declare-fun X19 (Int Int) Bool)
(assert (forall ((m2 Int)(n3 Int)) (=> (X0  n3 m2) false)))
(assert (forall ((x39 Int)(x40 Int)) (=> (and (not (=  x39 0)) (and (not (=  x40 0)) (=  x39 0))) (X2  x40 x39))))
(assert (forall ((x39 Int)(x40 Int)) (=> (and (X3  (+  x40 1) x40 x39) (and (not (=  x40 0)) (=  x39 0))) (X2  x40 x39))))
(assert (forall ((x39 Int)(x40 Int)) (=> (and (not (=  x39 0)) (and (X17  x40 x39) (=  x39 0))) (X2  x40 x39))))
(assert (forall ((x39 Int)(x40 Int)) (=> (and (X3  (+  x40 1) x40 x39) (and (X17  x40 x39) (=  x39 0))) (X2  x40 x39))))
(assert (forall ((x39 Int)(x40 Int)) (=> (and (not (=  x39 0)) (and (not (=  x40 0)) (=  x40 0))) (X2  x40 x39))))
(assert (forall ((x39 Int)(x40 Int)) (=> (and (X3  (+  x40 1) x40 x39) (and (not (=  x40 0)) (=  x40 0))) (X2  x40 x39))))
(assert (forall ((x39 Int)(x40 Int)) (=> (and (not (=  x39 0)) (and (X17  x40 x39) (=  x40 0))) (X2  x40 x39))))
(assert (forall ((x39 Int)(x40 Int)) (=> (and (X3  (+  x40 1) x40 x39) (and (X17  x40 x39) (=  x40 0))) (X2  x40 x39))))
(assert (forall ((x39 Int)(x40 Int)) (=> (and (not (=  x39 0)) (and (not (=  x40 0)) (X19  x40 x39))) (X2  x40 x39))))
(assert (forall ((x39 Int)(x40 Int)) (=> (and (X3  (+  x40 1) x40 x39) (and (not (=  x40 0)) (X19  x40 x39))) (X2  x40 x39))))
(assert (forall ((x39 Int)(x40 Int)) (=> (and (not (=  x39 0)) (and (X17  x40 x39) (X19  x40 x39))) (X2  x40 x39))))
(assert (forall ((x39 Int)(x40 Int)) (=> (and (X3  (+  x40 1) x40 x39) (and (X17  x40 x39) (X19  x40 x39))) (X2  x40 x39))))
(assert (forall ((x39 Int)(x40 Int)(x41 Int)) (=> (X1  x41 x40 x39) (or (X3  x41 x40 x39) (X2  x40 x39)))))
(assert (forall ((m5 Int)(n6 Int)) (=> (X2  (-  n6 1) m5) (X19  n6 m5))))
(assert (forall ((m5 Int)(n6 Int)(tmp52 Int)(x38 Int)) (=> (and (=  tmp52 (-  n6 1)) (X18  x38 n6 m5)) (or (X1  x38 tmp52 m5) (X19  n6 m5)))))
(assert (forall ((m5 Int)(n6 Int)(x8 Int)) (=> (X2  x8 (-  m5 1)) (X18  x8 n6 m5))))
(assert (forall ((m5 Int)(n6 Int)(tmp53 Int)(x8 Int)(x37 Int)) (=> (and (=  tmp53 (-  m5 1)) (X3  x37 n6 m5)) (or (X1  x37 x8 tmp53) (X18  x8 n6 m5)))))
(assert (forall ((m5 Int)(n6 Int)) (=> (X2  1 (-  m5 1)) (X17  n6 m5))))
(assert (forall ((m5 Int)(n6 Int)(tmp54 Int)(tmp55 Int)(x36 Int)) (=> (and (and (=  tmp54 1) (=  tmp55 (-  m5 1))) (X3  x36 n6 m5)) (or (X1  x36 tmp54 tmp55) (X17  n6 m5)))))
(assert (forall ((x34 Int)(x35 Int)) (=> (X16  x35 x34) (X0  x35 x34))))
(assert (forall ((m2 Int)(n3 Int)) (=> (X2  n3 m2) (X16  n3 m2))))
(assert (forall ((m2 Int)(n3 Int)(x33 Int)) (=> (<  x33 n3) (or (X1  x33 n3 m2) (X16  n3 m2)))))
(check-sat)
    